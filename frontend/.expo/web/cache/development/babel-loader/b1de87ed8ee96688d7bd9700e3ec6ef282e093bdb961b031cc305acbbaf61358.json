{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { Card, Image, Button, Icon } from \"@rneui/themed\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport CameraButton from \"./CameraButton\";\nimport HorizontalPercentageBar from \"./HorizontalPercentageBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get(\"window\").width;\nvar height = Dimensions.get(\"window\").height;\nvar Detail = function Detail() {\n  var _route$params, _route$params2, _route$params3, _route$params4, _route$params5, _route$params6;\n  var route = useRoute();\n  var values = [(_route$params = route.params) == null ? void 0 : _route$params.healthy, (_route$params2 = route.params) == null ? void 0 : _route$params2.calculus, (_route$params3 = route.params) == null ? void 0 : _route$params3.tooth_decay, (_route$params4 = route.params) == null ? void 0 : _route$params4.gingivitis, (_route$params5 = route.params) == null ? void 0 : _route$params5.hypodontia];\n  var names = [\"Sağlıklı\", \"Tartar\", \"Çürük\", \"Diş Eti İltihabı\", \"Hipodonti\"];\n  var combinedArray = values.map(function (value, index) {\n    return {\n      value: value,\n      name: names[index]\n    };\n  });\n  combinedArray.sort(function (a, b) {\n    return b.value - a.value;\n  });\n  var sortedValues = combinedArray.map(function (item) {\n    return item.value;\n  });\n  var sortedNames = combinedArray.map(function (item) {\n    return item.name;\n  });\n  function formatDate(dateString) {\n    var date = new Date(dateString);\n    var year = date.getFullYear();\n    var month = String(date.getMonth() + 1).padStart(2, '0');\n    var day = String(date.getDate()).padStart(2, '0');\n    var hour = String(date.getHours()).padStart(2, '0');\n    var minute = String(date.getMinutes()).padStart(2, '0');\n    var second = String(date.getSeconds()).padStart(2, '0');\n    var formattedDate = `${day}.${month}.${year} ${hour}:${minute}`;\n    return formattedDate;\n  }\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsx(Card, {\n        containerStyle: {\n          borderRadius: 30\n        },\n        children: _jsx(View, {\n          style: styles.user,\n          children: (_route$params6 = route.params) != null && _route$params6.image ? _jsx(Image, {\n            style: styles.image,\n            source: {\n              uri: route.params.image\n            }\n          }) : \"\"\n        })\n      })\n    }), _jsx(View, {\n      style: styles.cardContainer,\n      children: _jsxs(Card, {\n        containerStyle: {\n          borderRadius: 30\n        },\n        children: [_jsx(Card.Title, {\n          style: styles.resultTitle,\n          children: \"Analiz Sonucu\"\n        }), _jsx(Card.Divider, {}), sortedValues == null ? void 0 : sortedValues.map(function (itemValue, index) {\n          return itemValue > 33 ? _jsx(HorizontalPercentageBar, {\n            disease: sortedNames[index],\n            percentage: itemValue\n          }, index) : null;\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.cardContainer,\n      children: _jsx(Card, {\n        containerStyle: {\n          borderRadius: 30\n        },\n        children: _jsx(Text, {\n          style: styles.descText,\n          children: route.params.description\n        })\n      })\n    }), _jsx(View, {\n      style: styles.cardContainer,\n      children: _jsx(Card, {\n        containerStyle: {\n          borderRadius: 30\n        },\n        children: _jsx(Text, {\n          style: styles.descText,\n          children: formatDate(route.params.createdAt)\n        })\n      })\n    })]\n  });\n};\nexport default Detail;\nvar styles = StyleSheet.create({\n  container: {\n    width: window.width,\n    height: window.height,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  user: {\n    width: 150,\n    height: 210,\n    justifyContent: \"center\",\n    marginBottom: 3\n  },\n  image: {\n    width: 150,\n    height: 210\n  },\n  resultTitle: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 20\n  },\n  cardContainer: {\n    marginTop: 10\n  },\n  resultText: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 20\n  },\n  descText: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","Card","Image","Button","Icon","Dimensions","useNavigation","useRoute","CameraButton","HorizontalPercentageBar","jsx","_jsx","jsxs","_jsxs","width","get","height","Detail","_route$params","_route$params2","_route$params3","_route$params4","_route$params5","_route$params6","route","values","params","healthy","calculus","tooth_decay","gingivitis","hypodontia","names","combinedArray","map","value","index","name","sort","a","b","sortedValues","item","sortedNames","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","formattedDate","View","children","style","styles","container","containerStyle","borderRadius","user","image","source","uri","cardContainer","Title","resultTitle","Divider","itemValue","disease","percentage","Text","descText","description","createdAt","StyleSheet","create","window","flexDirection","alignItems","justifyContent","marginBottom","textAlign","color","fontSize","marginTop","resultText"],"sources":["C:/Users/Beytullah/Documents/GitHub/DentAI/frontend/components/Detail.js"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { Card, Image, Button, Icon } from \"@rneui/themed\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport CameraButton from \"./CameraButton\";\r\nimport HorizontalPercentageBar from \"./HorizontalPercentageBar\";\r\n\r\nvar width = Dimensions.get(\"window\").width; //full width\r\nvar height = Dimensions.get(\"window\").height; //full height\r\n\r\nconst Detail = () => {\r\n  const route = useRoute();\r\n  const values = [route.params?.healthy, route.params?.calculus, route.params?.tooth_decay, route.params?.gingivitis, route.params?.hypodontia]\r\n  const names = [\"Sağlıklı\",\"Tartar\",\"Çürük\",\"Diş Eti İltihabı\",\"Hipodonti\"]\r\n\r\n  const combinedArray = values.map((value, index) => ({ value, name: names[index] }));\r\n  combinedArray.sort((a, b) => b.value - a.value);\r\n\r\n  const sortedValues = combinedArray.map(item => item.value);\r\n  const sortedNames = combinedArray.map(item => item.name);\r\n\r\n\r\n\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hour = String(date.getHours()).padStart(2, '0');\r\n    const minute = String(date.getMinutes()).padStart(2, '0');\r\n    const second = String(date.getSeconds()).padStart(2, '0');\r\n\r\n    const formattedDate = `${day}.${month}.${year} ${hour}:${minute}`;\r\n    return formattedDate;\r\n}\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.container}>\r\n        <Card containerStyle={{ borderRadius: 30 }}>\r\n          <View style={styles.user}>\r\n            {route.params?.image ? (\r\n              <Image\r\n                style={styles.image}\r\n                source={{ uri: route.params.image }}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </View>\r\n        </Card>\r\n      </View>\r\n      <View style={styles.cardContainer}>\r\n        <Card containerStyle={{ borderRadius: 30 }}>\r\n          <Card.Title style={styles.resultTitle}>Analiz Sonucu</Card.Title>\r\n          <Card.Divider />\r\n          {sortedValues?.map((itemValue, index) => (\r\n              itemValue > 33 ? (\r\n                <HorizontalPercentageBar\r\n                  key={index}\r\n                  disease={sortedNames[index]}\r\n                  percentage={itemValue}\r\n                />) : null\r\n            ))}\r\n        </Card>\r\n      </View>\r\n      <View style={styles.cardContainer}>\r\n        <Card containerStyle={{ borderRadius: 30 }}>\r\n          <Text style={styles.descText}>{route.params.description}</Text>\r\n        </Card>\r\n      </View>\r\n      <View style={styles.cardContainer}>\r\n        <Card containerStyle={{ borderRadius: 30 }}>\r\n          <Text style={styles.descText}>{formatDate(route.params.createdAt)}</Text>\r\n        </Card>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: window.width,\r\n    height: window.height,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent:\"center\"\r\n  },\r\n  user: {\r\n    width: 150,\r\n    height: 210,\r\n    justifyContent: \"center\",\r\n    marginBottom: 3,\r\n  },\r\n  image: {\r\n    width: 150,\r\n    height: 210,\r\n  },\r\n  resultTitle: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 20,\r\n  },\r\n  cardContainer: {\r\n    marginTop: 10,\r\n  },\r\n  resultText: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 20,\r\n    //fontWeight: \"bold\",\r\n  },\r\n  descText: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 16,\r\n    //fontWeight: \"bold\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}