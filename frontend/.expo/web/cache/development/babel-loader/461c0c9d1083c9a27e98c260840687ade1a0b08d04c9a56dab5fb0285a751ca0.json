{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport deepMap from \"./deep-map\";\nvar validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\nvar scaleByAnnotation = function scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale) {\n  return function (value) {\n    if (!validScaleSheetRegex.test(value)) {\n      return value;\n    }\n    var regexExecResult = validScaleSheetRegex.exec(value);\n    var size = parseFloat(regexExecResult[1]);\n    var scaleFunc = regexExecResult[2];\n    var scaleFactor = regexExecResult[3];\n    if (scaleFactor) scaleFunc = scaleFunc.slice(0, -scaleFactor.length);\n    var shouldRound = value.endsWith('r');\n    var result;\n    switch (scaleFunc) {\n      case 's':\n        result = scale(size);\n        break;\n      case 'vs':\n        result = verticalScale(size);\n        break;\n      case 'ms':\n        result = moderateScale(size, scaleFactor);\n        break;\n      case 'mvs':\n        result = moderateVerticalScale(size, scaleFactor);\n        break;\n    }\n    return shouldRound ? Math.round(result) : result;\n  };\n};\nvar scaledSheetCreator = function scaledSheetCreator(scale, verticalScale, moderateScale, moderateVerticalScale) {\n  var scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\n  return {\n    create: function create(styleSheet) {\n      return StyleSheet.create(deepMap(styleSheet, scaleFunc));\n    }\n  };\n};\nexport default scaledSheetCreator;","map":{"version":3,"names":["deepMap","validScaleSheetRegex","scaleByAnnotation","scale","verticalScale","moderateScale","moderateVerticalScale","value","test","regexExecResult","exec","size","parseFloat","scaleFunc","scaleFactor","slice","length","shouldRound","endsWith","result","Math","round","scaledSheetCreator","create","styleSheet","StyleSheet"],"sources":["C:/Users/Beytullah/Documents/GitHub/DentAI/frontend/node_modules/react-native-size-matters/lib/ScaledSheet.js"],"sourcesContent":["import { StyleSheet } from 'react-native';\nimport deepMap from './deep-map';\n\n// Groups                     Size                   Func Factor\n//                             1                      2    3\nconst validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\n\nconst scaleByAnnotation = (scale, verticalScale, moderateScale, moderateVerticalScale) => (value) => {\n    if (!validScaleSheetRegex.test(value)) {\n        return value;\n    }\n\n    const regexExecResult = validScaleSheetRegex.exec(value);\n\n    const size = parseFloat(regexExecResult[1]);\n    let scaleFunc = regexExecResult[2];\n    const scaleFactor = regexExecResult[3]; // string or undefined\n\n    if (scaleFactor)\n        scaleFunc = scaleFunc.slice(0, - scaleFactor.length); // Remove the factor from it\n\n    const shouldRound = value.endsWith('r');\n\n    let result;\n\n    switch (scaleFunc) {\n        case 's':\n            result = scale(size);\n            break;\n        case 'vs':\n            result = verticalScale(size);\n            break;\n        case 'ms':\n            result = moderateScale(size, scaleFactor);\n            break;\n        case 'mvs':\n            result = moderateVerticalScale(size, scaleFactor);\n            break;\n    }\n\n    return shouldRound ? Math.round(result) : result;\n};\n\nconst scaledSheetCreator = (scale, verticalScale, moderateScale, moderateVerticalScale) => {\n    const scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\n    return {\n        create: styleSheet => StyleSheet.create(deepMap(styleSheet, scaleFunc))\n    };\n};\n\nexport default scaledSheetCreator;"],"mappings":";AACA,OAAOA,OAAO;AAId,IAAMC,oBAAoB,GAAG,4DAA4D;AAEzF,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAK,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB;EAAA,OAAK,UAACC,KAAK,EAAK;IACjG,IAAI,CAACN,oBAAoB,CAACO,IAAI,CAACD,KAAK,CAAC,EAAE;MACnC,OAAOA,KAAK;IAChB;IAEA,IAAME,eAAe,GAAGR,oBAAoB,CAACS,IAAI,CAACH,KAAK,CAAC;IAExD,IAAMI,IAAI,GAAGC,UAAU,CAACH,eAAe,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAII,SAAS,GAAGJ,eAAe,CAAC,CAAC,CAAC;IAClC,IAAMK,WAAW,GAAGL,eAAe,CAAC,CAAC,CAAC;IAEtC,IAAIK,WAAW,EACXD,SAAS,GAAGA,SAAS,CAACE,KAAK,CAAC,CAAC,EAAE,CAAED,WAAW,CAACE,MAAM,CAAC;IAExD,IAAMC,WAAW,GAAGV,KAAK,CAACW,QAAQ,CAAC,GAAG,CAAC;IAEvC,IAAIC,MAAM;IAEV,QAAQN,SAAS;MACb,KAAK,GAAG;QACJM,MAAM,GAAGhB,KAAK,CAACQ,IAAI,CAAC;QACpB;MACJ,KAAK,IAAI;QACLQ,MAAM,GAAGf,aAAa,CAACO,IAAI,CAAC;QAC5B;MACJ,KAAK,IAAI;QACLQ,MAAM,GAAGd,aAAa,CAACM,IAAI,EAAEG,WAAW,CAAC;QACzC;MACJ,KAAK,KAAK;QACNK,MAAM,GAAGb,qBAAqB,CAACK,IAAI,EAAEG,WAAW,CAAC;QACjD;IACR;IAEA,OAAOG,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC,GAAGA,MAAM;EACpD,CAAC;AAAA;AAED,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAInB,KAAK,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,EAAK;EACvF,IAAMO,SAAS,GAAGX,iBAAiB,CAACC,KAAK,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,CAAC;EAC/F,OAAO;IACHiB,MAAM,EAAE,SAAAA,OAAAC,UAAU;MAAA,OAAIC,UAAU,CAACF,MAAM,CAACvB,OAAO,CAACwB,UAAU,EAAEX,SAAS,CAAC,CAAC;IAAA;EAC3E,CAAC;AACL,CAAC;AAED,eAAeS,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}