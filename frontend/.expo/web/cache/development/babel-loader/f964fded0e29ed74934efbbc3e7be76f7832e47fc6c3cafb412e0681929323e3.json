{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Platform } from 'expo-modules-core';\nimport CameraManager from \"../ExponentCameraManager\";\nexport var ConversionTables = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance\n};\nexport function convertNativeProps(props) {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n  var nativeProps = {};\n  for (var _ref of Object.entries(props)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var key = _ref2[0];\n    var value = _ref2[1];\n    if (typeof value === 'string' && ConversionTables[key]) {\n      nativeProps[key] = ConversionTables[key][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n  return nativeProps;\n}\nexport function ensureNativeProps(props) {\n  var newProps = convertNativeProps(props);\n  if (newProps.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n  if (newProps.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n  return newProps;\n}","map":{"version":3,"names":["Platform","CameraManager","ConversionTables","type","Type","flashMode","FlashMode","autoFocus","AutoFocus","whiteBalance","WhiteBalance","convertNativeProps","props","nativeProps","_ref","Object","entries","_ref2","_slicedToArray","key","value","ensureNativeProps","newProps","onBarCodeScanned","barCodeScannerEnabled","onFacesDetected","faceDetectorEnabled","OS","ratio","useCamera2Api","poster"],"sources":["C:\\Users\\Beytullah\\Documents\\GitHub\\DentAI\\frontend\\node_modules\\expo-camera\\src\\utils\\props.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport {\n  CameraNativeProps,\n  CameraType,\n  FlashMode,\n  AutoFocus,\n  WhiteBalance,\n  CameraProps,\n} from '../Camera.types';\nimport CameraManager from '../ExponentCameraManager';\n\n// Values under keys from this object will be transformed to native options\nexport const ConversionTables: {\n  type: Record<keyof typeof CameraType, CameraNativeProps['type']>;\n  flashMode: Record<keyof typeof FlashMode, CameraNativeProps['flashMode']>;\n  autoFocus: Record<keyof typeof AutoFocus, CameraNativeProps['autoFocus']>;\n  whiteBalance: Record<keyof typeof WhiteBalance, CameraNativeProps['whiteBalance']>;\n} = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance,\n};\n\nexport function convertNativeProps(props?: CameraProps): CameraNativeProps {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n\n  const nativeProps: CameraNativeProps = {};\n\n  for (const [key, value] of Object.entries(props)) {\n    if (typeof value === 'string' && ConversionTables[key]) {\n      nativeProps[key] = ConversionTables[key][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n\n  return nativeProps;\n}\n\nexport function ensureNativeProps(props?: CameraProps): CameraNativeProps {\n  const newProps = convertNativeProps(props);\n\n  if (newProps.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (newProps.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n\n  return newProps;\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAU5C,OAAOC,aAAa;AAGpB,OAAO,IAAMC,gBAAgB,GAKzB;EACFC,IAAI,EAAEF,aAAa,CAACG,IAAI;EACxBC,SAAS,EAAEJ,aAAa,CAACK,SAAS;EAClCC,SAAS,EAAEN,aAAa,CAACO,SAAS;EAClCC,YAAY,EAAER,aAAa,CAACS;CAC7B;AAED,OAAM,SAAUC,kBAAkBA,CAACC,KAAmB;EACpD,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACvC,OAAO,EAAE;;EAGX,IAAMC,WAAW,GAAsB,EAAE;EAEzC,SAAAC,IAAA,IAA2BC,MAAM,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;IAAA,IAAAK,KAAA,GAAAC,cAAA,CAAAJ,IAAA;IAAA,IAAtCK,GAAG,GAAAF,KAAA;IAAA,IAAEG,KAAK,GAAAH,KAAA;IACpB,IAAI,OAAOG,KAAK,KAAK,QAAQ,IAAIlB,gBAAgB,CAACiB,GAAG,CAAC,EAAE;MACtDN,WAAW,CAACM,GAAG,CAAC,GAAGjB,gBAAgB,CAACiB,GAAG,CAAC,CAACC,KAAK,CAAC;KAChD,MAAM;MACLP,WAAW,CAACM,GAAG,CAAC,GAAGC,KAAK;;;EAI5B,OAAOP,WAAW;AACpB;AAEA,OAAM,SAAUQ,iBAAiBA,CAACT,KAAmB;EACnD,IAAMU,QAAQ,GAAGX,kBAAkB,CAACC,KAAK,CAAC;EAE1C,IAAIU,QAAQ,CAACC,gBAAgB,EAAE;IAC7BD,QAAQ,CAACE,qBAAqB,GAAG,IAAI;;EAGvC,IAAIF,QAAQ,CAACG,eAAe,EAAE;IAC5BH,QAAQ,CAACI,mBAAmB,GAAG,IAAI;;EAGrC,IAAI1B,QAAQ,CAAC2B,EAAE,KAAK,SAAS,EAAE;IAC7B,OAAOL,QAAQ,CAACM,KAAK;IACrB,OAAON,QAAQ,CAACO,aAAa;;EAG/B,IAAI7B,QAAQ,CAAC2B,EAAE,KAAK,KAAK,EAAE;IACzB,OAAOL,QAAQ,CAACQ,MAAM;;EAGxB,OAAOR,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}