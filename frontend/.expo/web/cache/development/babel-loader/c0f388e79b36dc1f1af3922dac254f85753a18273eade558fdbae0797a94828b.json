{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UserContext = createContext();\nexport var UserProvider = function UserProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  return _jsx(UserContext.Provider, {\n    value: {\n      username: username,\n      setUsername: setUsername\n    },\n    children: children\n  });\n};\nexport var useUser = function useUser() {\n  return useContext(UserContext);\n};","map":{"version":3,"names":["createContext","useContext","useState","jsx","_jsx","UserContext","UserProvider","_ref","children","_useState","_useState2","_slicedToArray","username","setUsername","Provider","value","useUser"],"sources":["C:/Users/Beytullah/Documents/GitHub/DentAI/frontend/components/UserContext.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  return (\r\n    <UserContext.Provider value={{ username, setUsername }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  return useContext(UserContext);\r\n};"],"mappings":";AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5D,IAAMC,WAAW,GAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAAgCP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,OACEN,IAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEH,QAAQ,EAARA,QAAQ;MAAEC,WAAW,EAAXA;IAAY,CAAE;IAAAL,QAAA,EACpDA;EAAQ,CACW,CAAC;AAE3B,CAAC;AAED,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAC3B,OAAOf,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}