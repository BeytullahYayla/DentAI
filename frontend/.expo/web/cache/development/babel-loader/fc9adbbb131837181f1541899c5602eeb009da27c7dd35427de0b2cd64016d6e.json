{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport * as Utils from \"./WebCameraUtils\";\nimport { FacingModeToCameraType } from \"./WebConstants\";\nvar VALID_SETTINGS_KEYS = ['autoFocus', 'flashMode', 'exposureCompensation', 'colorTemperature', 'iso', 'brightness', 'contrast', 'saturation', 'sharpness', 'focusDistance', 'whiteBalance', 'zoom'];\nfunction useLoadedVideo(video, onLoaded) {\n  React.useEffect(function () {\n    if (video) {\n      video.addEventListener('loadedmetadata', function () {\n        requestAnimationFrame(function () {\n          onLoaded();\n        });\n      });\n    }\n  }, [video]);\n}\nexport function useWebCameraStream(video, preferredType, settings, _ref) {\n  var onCameraReady = _ref.onCameraReady,\n    onMountError = _ref.onMountError;\n  var isStartingCamera = React.useRef(false);\n  var activeStreams = React.useRef([]);\n  var capabilities = React.useRef({\n    autoFocus: 'continuous',\n    flashMode: 'off',\n    whiteBalance: 'continuous',\n    zoom: 1\n  });\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    stream = _React$useState2[0],\n    setStream = _React$useState2[1];\n  var mediaTrackSettings = React.useMemo(function () {\n    return stream ? stream.getTracks()[0].getSettings() : null;\n  }, [stream]);\n  var type = React.useMemo(function () {\n    if (!mediaTrackSettings) {\n      return null;\n    }\n    var _mediaTrackSettings$f = mediaTrackSettings.facingMode,\n      facingMode = _mediaTrackSettings$f === void 0 ? 'user' : _mediaTrackSettings$f;\n    return FacingModeToCameraType[facingMode];\n  }, [mediaTrackSettings]);\n  var getStreamDeviceAsync = React.useCallback(_asyncToGenerator(function* () {\n    try {\n      return yield Utils.getPreferredStreamDevice(preferredType);\n    } catch (nativeEvent) {\n      if (__DEV__) {\n        console.warn(`Error requesting UserMedia for type \"${preferredType}\":`, nativeEvent);\n      }\n      if (onMountError) {\n        onMountError({\n          nativeEvent: nativeEvent\n        });\n      }\n      return null;\n    }\n  }), [preferredType, onMountError]);\n  var resumeAsync = React.useCallback(_asyncToGenerator(function* () {\n    var nextStream = yield getStreamDeviceAsync();\n    if (Utils.compareStreams(nextStream, stream)) {\n      return false;\n    }\n    if (!activeStreams.current.some(function (value) {\n      return value.id === (nextStream == null ? void 0 : nextStream.id);\n    })) {\n      activeStreams.current.push(nextStream);\n    }\n    setStream(nextStream);\n    if (onCameraReady) {\n      onCameraReady();\n    }\n    return false;\n  }), [getStreamDeviceAsync, setStream, onCameraReady, stream, activeStreams.current]);\n  React.useEffect(function () {\n    if (isStartingCamera.current) {\n      return;\n    }\n    isStartingCamera.current = true;\n    resumeAsync().then(function (isStarting) {\n      isStartingCamera.current = isStarting;\n    }).catch(function () {\n      isStartingCamera.current = false;\n    });\n  }, [preferredType]);\n  React.useEffect(function () {\n    var changes = {};\n    for (var key of Object.keys(settings)) {\n      if (!VALID_SETTINGS_KEYS.includes(key)) {\n        continue;\n      }\n      var nextValue = settings[key];\n      if (nextValue !== capabilities.current[key]) {\n        changes[key] = nextValue;\n      }\n    }\n    var hasChanges = !!Object.keys(changes).length;\n    var nextWebCameraSettings = _objectSpread(_objectSpread({}, capabilities.current), changes);\n    if (hasChanges) {\n      Utils.syncTrackCapabilities(preferredType, stream, changes);\n    }\n    capabilities.current = nextWebCameraSettings;\n  }, [settings.autoFocus, settings.flashMode, settings.exposureCompensation, settings.colorTemperature, settings.iso, settings.brightness, settings.contrast, settings.saturation, settings.sharpness, settings.focusDistance, settings.whiteBalance, settings.zoom]);\n  React.useEffect(function () {\n    if (!video.current) {\n      return;\n    }\n    Utils.setVideoSource(video.current, stream);\n  }, [video.current, stream]);\n  React.useEffect(function () {\n    return function () {\n      for (var _stream of activeStreams.current) {\n        Utils.stopMediaStream(_stream);\n      }\n      if (video.current) {\n        Utils.setVideoSource(video.current, stream);\n      }\n    };\n  }, []);\n  useLoadedVideo(video.current, function () {\n    Utils.syncTrackCapabilities(preferredType, stream, capabilities.current);\n  });\n  return {\n    type: type,\n    mediaTrackSettings: mediaTrackSettings\n  };\n}","map":{"version":3,"names":["React","Utils","FacingModeToCameraType","VALID_SETTINGS_KEYS","useLoadedVideo","video","onLoaded","useEffect","addEventListener","requestAnimationFrame","useWebCameraStream","preferredType","settings","_ref","onCameraReady","onMountError","isStartingCamera","useRef","activeStreams","capabilities","autoFocus","flashMode","whiteBalance","zoom","_React$useState","useState","_React$useState2","_slicedToArray","stream","setStream","mediaTrackSettings","useMemo","getTracks","getSettings","type","_mediaTrackSettings$f","facingMode","getStreamDeviceAsync","useCallback","_asyncToGenerator","getPreferredStreamDevice","nativeEvent","__DEV__","console","warn","resumeAsync","nextStream","compareStreams","current","some","value","id","push","then","isStarting","catch","changes","key","Object","keys","includes","nextValue","hasChanges","length","nextWebCameraSettings","_objectSpread","syncTrackCapabilities","exposureCompensation","colorTemperature","iso","brightness","contrast","saturation","sharpness","focusDistance","setVideoSource","stopMediaStream"],"sources":["C:\\Users\\Beytullah\\Documents\\GitHub\\DentAI\\frontend\\node_modules\\expo-camera\\src\\useWebCameraStream.ts"],"sourcesContent":["/* eslint-env browser */\nimport * as React from 'react';\n\nimport {\n  CameraReadyListener,\n  CameraType,\n  MountErrorListener,\n  WebCameraSettings,\n} from './Camera.types';\nimport * as Utils from './WebCameraUtils';\nimport { FacingModeToCameraType } from './WebConstants';\n\nconst VALID_SETTINGS_KEYS = [\n  'autoFocus',\n  'flashMode',\n  'exposureCompensation',\n  'colorTemperature',\n  'iso',\n  'brightness',\n  'contrast',\n  'saturation',\n  'sharpness',\n  'focusDistance',\n  'whiteBalance',\n  'zoom',\n];\n\nfunction useLoadedVideo(video: HTMLVideoElement | null, onLoaded: () => void) {\n  React.useEffect(() => {\n    if (video) {\n      video.addEventListener('loadedmetadata', () => {\n        // without this async block the constraints aren't properly applied to the camera,\n        // this means that if you were to turn on the torch and swap to the front camera,\n        // then swap back to the rear camera the torch setting wouldn't be applied.\n        requestAnimationFrame(() => {\n          onLoaded();\n        });\n      });\n    }\n  }, [video]);\n}\n\nexport function useWebCameraStream(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  preferredType: CameraType,\n  settings: Record<string, any>,\n  {\n    onCameraReady,\n    onMountError,\n  }: { onCameraReady?: CameraReadyListener; onMountError?: MountErrorListener }\n): {\n  type: CameraType | null;\n  mediaTrackSettings: MediaTrackSettings | null;\n} {\n  const isStartingCamera = React.useRef<boolean | null>(false);\n  const activeStreams = React.useRef<MediaStream[]>([]);\n  const capabilities = React.useRef<WebCameraSettings>({\n    autoFocus: 'continuous',\n    flashMode: 'off',\n    whiteBalance: 'continuous',\n    zoom: 1,\n  });\n  const [stream, setStream] = React.useState<MediaStream | null>(null);\n\n  const mediaTrackSettings = React.useMemo(() => {\n    return stream ? stream.getTracks()[0].getSettings() : null;\n  }, [stream]);\n\n  // The actual camera type - this can be different from the incoming camera type.\n  const type = React.useMemo(() => {\n    if (!mediaTrackSettings) {\n      return null;\n    }\n    // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n    const { facingMode = 'user' } = mediaTrackSettings;\n    return FacingModeToCameraType[facingMode];\n  }, [mediaTrackSettings]);\n\n  const getStreamDeviceAsync = React.useCallback(async (): Promise<MediaStream | null> => {\n    try {\n      return await Utils.getPreferredStreamDevice(preferredType);\n    } catch (nativeEvent) {\n      if (__DEV__) {\n        console.warn(`Error requesting UserMedia for type \"${preferredType}\":`, nativeEvent);\n      }\n      if (onMountError) {\n        onMountError({ nativeEvent });\n      }\n      return null;\n    }\n  }, [preferredType, onMountError]);\n\n  const resumeAsync = React.useCallback(async (): Promise<boolean> => {\n    const nextStream = await getStreamDeviceAsync();\n    if (Utils.compareStreams(nextStream, stream)) {\n      // Do nothing if the streams are the same.\n      // This happens when the device only supports one camera (i.e. desktop) and the mode was toggled between front/back while already active.\n      // Without this check there is a screen flash while the video switches.\n      return false;\n    }\n\n    // Save a history of all active streams (usually 2+) so we can close them later.\n    // Keeping them open makes swapping camera types much faster.\n    if (!activeStreams.current.some((value) => value.id === nextStream?.id)) {\n      activeStreams.current.push(nextStream!);\n    }\n\n    // Set the new stream -> update the video, settings, and actual camera type.\n    setStream(nextStream);\n    if (onCameraReady) {\n      onCameraReady();\n    }\n    return false;\n  }, [getStreamDeviceAsync, setStream, onCameraReady, stream, activeStreams.current]);\n\n  React.useEffect(() => {\n    // Restart the camera and guard concurrent actions.\n    if (isStartingCamera.current) {\n      return;\n    }\n    isStartingCamera.current = true;\n\n    resumeAsync()\n      .then((isStarting) => {\n        isStartingCamera.current = isStarting;\n      })\n      .catch(() => {\n        // ensure the camera can be started again.\n        isStartingCamera.current = false;\n      });\n  }, [preferredType]);\n\n  // Update the native camera with any custom capabilities.\n  React.useEffect(() => {\n    const changes: WebCameraSettings = {};\n\n    for (const key of Object.keys(settings)) {\n      if (!VALID_SETTINGS_KEYS.includes(key)) {\n        continue;\n      }\n      const nextValue = settings[key];\n      if (nextValue !== capabilities.current[key]) {\n        changes[key] = nextValue;\n      }\n    }\n\n    // Only update the native camera if changes were found\n    const hasChanges = !!Object.keys(changes).length;\n\n    const nextWebCameraSettings = { ...capabilities.current, ...changes };\n    if (hasChanges) {\n      Utils.syncTrackCapabilities(preferredType, stream, changes);\n    }\n\n    capabilities.current = nextWebCameraSettings;\n  }, [\n    settings.autoFocus,\n    settings.flashMode,\n    settings.exposureCompensation,\n    settings.colorTemperature,\n    settings.iso,\n    settings.brightness,\n    settings.contrast,\n    settings.saturation,\n    settings.sharpness,\n    settings.focusDistance,\n    settings.whiteBalance,\n    settings.zoom,\n  ]);\n\n  React.useEffect(() => {\n    // set or unset the video source.\n    if (!video.current) {\n      return;\n    }\n    Utils.setVideoSource(video.current, stream);\n  }, [video.current, stream]);\n\n  React.useEffect(() => {\n    return () => {\n      // Clean up on dismount, this is important for making sure the camera light goes off when the component is removed.\n      for (const stream of activeStreams.current) {\n        // Close all open streams.\n        Utils.stopMediaStream(stream);\n      }\n      if (video.current) {\n        // Invalidate the video source.\n        Utils.setVideoSource(video.current, stream);\n      }\n    };\n  }, []);\n\n  // Update props when the video loads.\n  useLoadedVideo(video.current, () => {\n    Utils.syncTrackCapabilities(preferredType, stream, capabilities.current);\n  });\n\n  return {\n    type,\n    mediaTrackSettings,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}